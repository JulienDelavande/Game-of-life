Here are the rules to execute the project.
It is composed in 2 parts, the first is with the generation of a naive universe, 
the second is the same but with linked-chain (it aloads the universe to extend).


---- QUICK LOOK AT THE DIRECTORIES ----
-> project         : it contains all the project directories and files
-> project/data    : it contains all the txt files needed for creating universes
-> project/src     : it contains all the .c files except the test files
-> project/test    : it contains all the test-X...X.c files
-> project/include : it contains all the .h files needed to link the scripts
-> project/out     : it contains all the images and videos generated by the scripts


---- GENERAL RULES OF THE MAKEFILE ----
/!\ the commands involving make shall be executed in the project directory (where the MAKEFILE is)
(?) adding -wd will launch most of the commands on a Windows device

-> compile-all      : compile all the test and app script into executables in the project directory               
-> clear            : erase the .o and exectables files from the project directory                                       (-wd)
-> launch-tests     : will compile and launch all tests                                                                  (-wd)
-> doc              : will generate the doxygen documentation
-> check-syntax     : will generate the .o file of each file and so verify the syntax while compiling
-> compile-all-ex   : will compile all files even the examples
-> video            : will create a video.mp4 using ppm images                                                           (-wd)
                      -you can regulate the frame by adding FRAME  = <number_of_images_per_second> (5 by default)  
                      -you can name the mp4 file created    NAME   = <name_of_the_file.mp4>        (video.mp4 by default)
                      -you can change the height and width  HEIGHT = <height_of_the_video>         (768 by default)
                                                            WIDTH  = <width_of_the_file>           (1024 by default)
-> clear-img        : will remove all .o and .mp4 files                                                                  (-wd)


I] NAIVE:
/!\ the commands shall be executed in the project directory after having compiled all the needed files 
(make compile-all (-wd) or make <name_of_the_executable>)

==> tests :
  -> ./test-naive-universe       : test the universe structure and basic fonction on this structure
  -> ./test-naive-load           : test the loading and writing fonction from and of a universe.txt
  -> ./test-naive-conway         : test the application of the conway's rules on a given universe
  -> ./test-naive-generate-image : test the creation of ppm images from txt universe

==> app : 
(replace universe.txt by the universe you want to load glider.txt for example)
  -> ./app-naive-loader ./data/universe.txt : load a universe txt file and prints it in the console
  -> ./app-naive-conway ./data/universe.txt : load a universe txt file apply the conway's step and prints it in the console as well as creating ppm images in the out directory

==> all : 
 -> comp-all-naive : compile all the naive files 




 II] LIST:
/!\ the commands shall be executed in the project directory after having compiled all the needed files 
(make compile-all (-wd) or make <name_of_the_executable>)

==> tests :
  -> ./test-linked-list-cells    : test the linked list structure and fonctions
  -> ./test-list-universe        : test the universe structure and basic fonction on this structure
  -> ./test-list-load            : test the loading and writing fonction from and of a universe.txt
  -> ./test-list-conway          : test the application of the conway's rules on a given universe
  -> ./test-list-ppm-writer      : test the creation of ppm images from txt universe

==> app : 
(replace universe.txt by the universe you want to load glider.txt for example)
  -> ./app-list-loader ./data/universe.txt : load a universe txt file and prints it in the console
  -> ./app-list-conway ./data/universe.txt : load a universe txt file apply the conway's step and prints it in the console as well as creating ppm images in the out directory

==> all : 
 -> comp-all-list : compile all the linked list files 